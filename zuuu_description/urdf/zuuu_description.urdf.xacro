<?xml version="1.0"?>
<robot name="zuuu" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="zuuu" params="model prefix">

    <!-- Define robot constants -->
    <xacro:property name="base_radius" value="0.16" />
    <xacro:property name="base_top_height" value="0.1425" />
    <xacro:property name="base_depth" value="0.07" />

    <xacro:property name="wheel_radius" value="0.105" />
    <xacro:property name="wheel_width" value="0.035" />
    <xacro:property name="wheel_radial_dist" value="0.1805" />
    <xacro:property name="wheel_zoff" value="0.20" />
    <!-- <xacro:property name="global_damping" value="0.5" /> -->
    <!-- <xacro:property name="global_friction" value="0.1" /> -->

    <xacro:property name="global_damping" value="0.0" />
    <xacro:property name="global_friction" value="0.0" />

    <!-- Define some commonly used intertial properties  -->
    <xacro:macro name="box_inertia" params="m w h d">
      <inertial>
        <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}" />
        <mass value="${m}" />
        <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}"
          iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
      </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
      <inertial>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <mass value="${m}" />
        <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}"
          iyz="0" izz="${(m/2) * (r*r)}" />
      </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
      <inertial>
        <mass value="${m}" />
        <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0"
          izz="${(2/5) * m * (r*r)}" />
      </inertial>
    </xacro:macro>


    <!-- Wheels -->
    <xacro:macro name="wheel" params="prefix yaw_angle">
      <link name="${prefix}_link">
        <!-- <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
          <geometry>
              <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
              <box size="${wheel_radius} ${wheel_radius} ${wheel_width+0.02}"/>
          </geometry>
          <material name="Bricks"></material>
        </visual> -->

        <collision>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
          <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}" />
          </geometry>
        </collision>

        <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}" />
      </link>


      <xacro:if value="$(arg use_fixed_wheels)">
        <!-- If use_fixed_wheels the wheels can't rotate, they will slide on the floor -->
        <joint name="${prefix}_joint" type="fixed">
          <parent link="base_link" />
          <child link="${prefix}_link" />
          <origin xyz="${(wheel_radial_dist+wheel_width/2)*cos(yaw_angle)} ${-(wheel_radial_dist+wheel_width/2)*sin(yaw_angle)} ${(wheel_radius)}" rpy="0 0 ${pi/2-yaw_angle}"/>
          <axis xyz="0 1 0" />
          <joint_properties damping="${global_damping}" friction="${global_friction}" />
        </joint>
        <gazebo reference="${prefix}_link">
          <mu1 value="0.0" />
          <mu2 value="0.0" />
          <kp value="10000000.0" />
          <kd value="1.0" />
          <fdir1 value="1 0 0" />
          <maxVel>1.0</maxVel>
          <minDepth>0.0</minDepth>
          <turnGravityOff>false</turnGravityOff>
        </gazebo>
      </xacro:if>

      <xacro:unless value="$(arg use_fixed_wheels)">
        <!-- If not use_fixed_wheels the wheels will rotate. The friction parameters try to emulate holonomic wheels, it kinda works but is unreliable with Gazebo -->

        <joint name="${prefix}_joint" type="continuous">
          <parent link="base_link" />
          <child link="${prefix}_link" />
          <origin
            xyz="${wheel_radial_dist*cos(yaw_angle)} ${-wheel_radial_dist*sin(yaw_angle)} ${-((base_top_height-base_depth/2)- wheel_radius)}"
            rpy="0 0 ${pi/2-yaw_angle}" />
          <axis xyz="0 1 0" />
          <joint_properties damping="${global_damping}" friction="${global_friction}" />
        </joint>
        <!-- Physics stuff -->
        <gazebo reference="${prefix}_link">
          <mu1 value="1.0" />
          <mu2 value="0.0" />
          <kp value="10000000.0" />
          <kd value="1.0" />
          <fdir1 value="1 0 0" />
          <maxVel>5.0</maxVel>
          <minDepth>0.002</minDepth>
          <turnGravityOff>false</turnGravityOff>
        </gazebo>
      </xacro:unless>

      <!-- Just so that we can see the wheels turn when they turn -->
      <link name="${prefix}_extra_link">
        <!-- <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
          <geometry>
              <box size="${wheel_radius} ${wheel_radius} ${wheel_width+0.02}"/>
          </geometry>
        </visual> -->
      </link>
      <joint name="${prefix}_extra_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0" />
        <axis xyz="0 0 0" />
        <parent link="${prefix}_link" />
        <child link="${prefix}_extra_link" />
      </joint>


    </xacro:macro>

    <!-- Wheel 1 at the back, 2 on the right, 3 on the left -->
    <xacro:wheel prefix="drivewhl1" yaw_angle="${pi/3}" />
    <xacro:wheel prefix="drivewhl2" yaw_angle="${5*pi/3}" />
    <xacro:wheel prefix="drivewhl3" yaw_angle="${pi}" />

    <!-- Robot Footprint. The robot's root link -->
    <link name="base_footprint"/>

    <joint name="base_footprint_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="0 0 ${(base_top_height-base_depth/2)}"/>
      <!-- <joint_properties damping="${global_damping}" friction="${global_friction}"/> -->
      <parent link="base_footprint"/>
      <child link="base_link"/>
    </joint>

    <link name="base_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>

          <mesh filename="file://$(find reachy_description)/meshes/mobile_base_visual.dae" />
        </geometry>
        <xacro:reachy_grey/>
      </visual>
      <!-- Real collision -->
      <collision>
        <origin xyz="0 0 0.145" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.245" length="0.19"/>
        </geometry>
      </collision>
      <!-- exagerated collision to avoid the mobile base sliding on Gazebo -->
      <!-- <collision>
        <origin xyz="0 0 0.12" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.245" length="0.24"/>
        </geometry>
      </collision> -->
    
      <inertial>
          <origin xyz="0.008 -0.00048 0.112" rpy="0 0 0"/>
          <mass value="24.0"/>
          <inertia ixx="0.40791094" ixy="-0.00167148" ixz="-0.00178789"
             iyx="-0.00167148" iyy="0.4236827" iyz="0.00026596"
             izx="-0.00178789" izy="0.00026596" izz="0.70990763"/>
      </inertial>
    </link>

    <link name="lidar_link">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="0.125" />
        <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001" />
      </inertial>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.0508" length="0.055" />
        </geometry>
      </collision>

      <!-- <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.0508" length="0.055"/>
        </geometry>
      </visual> -->
    </link>


    <joint name="lidar_joint" type="fixed">
      <parent link="base_link" />
      <child link="lidar_link" />
      <!-- <origin xyz="0.155 0 0.2" rpy="0 0 0"/> -->
      <!-- The -0.0129 were added on 22 April 2022 for the second version of Zuuu. The 2mm pads are
      not taken into account -->
      <!-- <origin xyz="0.155 0 ${-(base_top_height-base_depth/2)+base_top_height+0.105 -0.0129}" rpy="0 0 0" /> -->
      <origin xyz="0.184 0 0.25" rpy="0 0 3.141592653589793"/>
    </joint>

  </xacro:macro>
</robot>